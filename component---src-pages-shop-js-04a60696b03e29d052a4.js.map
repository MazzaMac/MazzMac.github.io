{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/components/artwall.js","webpack:///./src/pages/shop.js"],"names":["Image","data","useStaticQuery","fluid","placeholderImage","childImageSharp","ArtWall","type","ShopPage","location","url","href","currentPath","title"],"mappings":"6JA+BeA,EAhBD,WACZ,IAAMC,EAAOC,yBAAe,cAY5B,OAAO,kBAAC,IAAD,CAAKC,MAAOF,EAAKG,iBAAiBC,gBAAgBF,SCNpD,IAuBQG,EAzCf,YAGI,OAHoB,EAANC,KAIV,kBAAC,EAAD,O,wBCYOC,UAff,YAAmC,EAAhBP,KAAiB,IAAXQ,EAAU,EAAVA,SACfC,EAAMD,EAASE,KAAOF,EAASE,KAAO,GAE5C,OACE,kBAAC,IAAD,CACEC,YAAaF,GACb,kBAAC,IAAD,CAAKG,MAAM,SACX,wCAHF,MAKK,kBAAC,EAAD,CAASN,KAAK","file":"component---src-pages-shop-js-04a60696b03e29d052a4.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Image\n","import React from 'react'\nimport { graphql } from \"gatsby\"\nimport Image from \"./image\"\n\nfunction ArtWall({type}){\n    // var typeQuery;\n    // if (type === \"product\"){ typeQuery = \", product: {in: true}\"};\n    return (\n        <Image />\n    // <section id=\"art-wall\" style={\"display: flex;\"}>\n    //     {data.allMarkdownRemark.edges.map(({node}, index) => (\n    //         <a key={index} href={node.frontmatter.link}>\n    //                     <img src={node.frontmatter.image} style=\"flex: 1;\" />\n    //                 </a>\n    //                 ))}\n    //\n    //\n    //\n    // </section>\n    )\n}\n\nexport const query = graphql`\nquery imagesAll {\n  allMarkdownRemark(filter: {frontmatter: {category: {eq: \"art\"}}}) {\n    edges {\n      node {\n        id\n        excerpt(format: PLAIN)\n        frontmatter {\n          title\n          date\n          category\n          image\n          link\n        }\n        timeToRead\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}`\n\nexport default ArtWall;\n","import React from 'react';\nimport ArtWall from '../components/artwall';\nimport SEO from '../components/seo';\nimport Layout from '../components/layout';\n\nfunction ShopPage({data, location}){\n    const url = location.href ? location.href : '';\n\n    return (\n      <Layout\n        currentPath={url}>\n        <SEO title=\"Shop\" />\n        <h1>The Shop</h1>\n\n        // <ArtWall type=\"product\" />\n\n      </Layout>\n  )\n}\n\nexport default ShopPage;\n"],"sourceRoot":""}